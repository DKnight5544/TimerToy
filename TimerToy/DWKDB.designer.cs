#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimerToy
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dwk-multiple-projects")]
	public partial class DWKDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    #endregion
		
		public DWKDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TimerToysConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DWKDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DWKDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DWKDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DWKDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<Timer> Timers
		{
			get
			{
				return this.GetTable<Timer>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="tt.DeleteTimer")]
		public int DeleteTimer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimerKey", DbType="Char(36)")] string timerKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), timerKey);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="tt.UpdatePageName")]
		public int UpdatePageName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageKey", DbType="Char(36)")] string pageKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageName", DbType="NVarChar(150)")] string pageName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageKey, pageName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="tt.SelectPageData")]
		public ISingleResult<Page> SelectPageData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageKey", DbType="Char(36)")] string pageKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageKey);
			return ((ISingleResult<Page>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="tt.InsertNewPage")]
		public int InsertNewPage([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageKey", DbType="Char(36)")] ref string pageKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageKey);
			pageKey = ((string)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="tt.SelectAllByPage")]
		public ISingleResult<Timer> SelectAllByPage([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageKey", DbType="Char(36)")] string pageKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageKey);
			return ((ISingleResult<Timer>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="tt.ToggleTimer")]
		public ISingleResult<Timer> ToggleTimer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimerKey", DbType="Char(36)")] string timerKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), timerKey);
			return ((ISingleResult<Timer>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="tt.UpdateTimerName")]
		public ISingleResult<Timer> UpdateTimerName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimerKey", DbType="Char(36)")] string timerKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimerDescription", DbType="NVarChar(150)")] string timerDescription)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), timerKey, timerDescription);
			return ((ISingleResult<Timer>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="tt.InsertNewTimer")]
		public ISingleResult<Timer> InsertNewTimer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageKey", DbType="Char(36)")] string pageKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsBookMark", DbType="Bit")] System.Nullable<bool> isBookMark)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pageKey, isBookMark);
			return ((ISingleResult<Timer>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="tt.ResetTimer")]
		public ISingleResult<Timer> ResetTimer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimerKey", DbType="Char(36)")] string timerKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), timerKey);
			return ((ISingleResult<Timer>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="tt.AdjustTimer")]
		public ISingleResult<Timer> AdjustTimer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimerKey", DbType="Char(36)")] string timerKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Seconds", DbType="Int")] System.Nullable<int> seconds)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), timerKey, seconds);
			return ((ISingleResult<Timer>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tt.Page")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PageKey;
		
		private string _PageName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageKeyChanging(string value);
    partial void OnPageKeyChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    #endregion
		
		public Page()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageKey", DbType="Char(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PageKey
		{
			get
			{
				return this._PageKey;
			}
			set
			{
				if ((this._PageKey != value))
				{
					this.OnPageKeyChanging(value);
					this.SendPropertyChanging();
					this._PageKey = value;
					this.SendPropertyChanged("PageKey");
					this.OnPageKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tt.vwSelectAll")]
	public partial class Timer
	{
		
		private string _PageKey;
		
		private string _PageName;
		
		private string _TimerKey;
		
		private string _TimerDescription;
		
		private bool _IsRunning;
		
		private bool _IsBookmark;
		
		private int _SortIndex;
		
		private int _ElapsedTime;
		
		public Timer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageKey", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string PageKey
		{
			get
			{
				return this._PageKey;
			}
			set
			{
				if ((this._PageKey != value))
				{
					this._PageKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this._PageName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimerKey", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string TimerKey
		{
			get
			{
				return this._TimerKey;
			}
			set
			{
				if ((this._TimerKey != value))
				{
					this._TimerKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimerDescription", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string TimerDescription
		{
			get
			{
				return this._TimerDescription;
			}
			set
			{
				if ((this._TimerDescription != value))
				{
					this._TimerDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRunning", DbType="Bit NOT NULL")]
		public bool IsRunning
		{
			get
			{
				return this._IsRunning;
			}
			set
			{
				if ((this._IsRunning != value))
				{
					this._IsRunning = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBookmark", DbType="Bit NOT NULL")]
		public bool IsBookmark
		{
			get
			{
				return this._IsBookmark;
			}
			set
			{
				if ((this._IsBookmark != value))
				{
					this._IsBookmark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int NOT NULL")]
		public int SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this._SortIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElapsedTime", DbType="Int NOT NULL")]
		public int ElapsedTime
		{
			get
			{
				return this._ElapsedTime;
			}
			set
			{
				if ((this._ElapsedTime != value))
				{
					this._ElapsedTime = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
